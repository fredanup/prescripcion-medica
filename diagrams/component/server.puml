@startuml


!define COMPONENT Component

database "PostgreSQL"
folder "prisma" {
        COMPONENT "schema.prisma"
    }
package "src" {

    folder "server" {
        folder "aws" {
            COMPONENT "s3.ts"
        }
        folder "routers" {
            COMPONENT "_app.ts"
        }
        COMPONENT "context.ts"
        COMPONENT "env.js"
        COMPONENT "prisma.ts"
        COMPONENT "prodServer.ts"{
            portin p1
            
        }                  
    }
}

' Relaciones
"s3.ts"-->"env.js": Accede a variables de entorno de AWS S3
"context.ts"-->"prisma.ts" : Instancia cliente prisma
"context.ts"-->"s3.ts" : Instancia cliente S3
"env.js"-->".env" : Valida y exporta variables del servidor
"prisma.ts"-->"env.js": Verifica entorno de ejecución de Node
"prodServer.ts"-->"context.ts": Instancia contexto del sistema
"prodServer.ts"-->"_app.ts": Obtiene rutas de la aplicación
"prodServer.ts"-->"env.js": Obtiene entorno de ejecución de Node y puerto de escucha del servidor
"prisma.ts" --> "schema.prisma" : Utiliza esquema para definir modelos
"schema.prisma" --> PostgreSQL : Conexión ORM a PostgreSQL
"schema.prisma"-->".env" : Accede a la cadena de conexión
@enduml
